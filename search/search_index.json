{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Using UNISOC IoT Edition boards A comprehensive guide to using the UNISOC IoT Edition boards. Chip Board UNISOC Zephyr SDK","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#using-unisoc-iot-edition-boards","text":"A comprehensive guide to using the UNISOC IoT Edition boards. Chip Board UNISOC Zephyr SDK","title":"Using UNISOC IoT Edition boards"},{"location":"about/","text":"About UNISOC IoT Documentation was created by mkdocs. If you want to generate html format document, please follow below steps. Install required packages pip install --upgrade pip #upgrade pip to the latest version pip install mkdocs #install the mkdocs package pip install mkdocs-material #install the Material theme package You can also look into the officail website of mkdocs and Merterial for more details. Get the document sources git clone https://github.com/unisoc/documentation.git Build html docs cd documentation mkdocs build The HTML documents will be generated under site directory in a few seconds.","title":"About"},{"location":"about/#about","text":"UNISOC IoT Documentation was created by mkdocs. If you want to generate html format document, please follow below steps.","title":"About"},{"location":"about/#install-required-packages","text":"pip install --upgrade pip #upgrade pip to the latest version pip install mkdocs #install the mkdocs package pip install mkdocs-material #install the Material theme package You can also look into the officail website of mkdocs and Merterial for more details.","title":"Install required packages"},{"location":"about/#get-the-document-sources","text":"git clone https://github.com/unisoc/documentation.git","title":"Get the document sources"},{"location":"about/#build-html-docs","text":"cd documentation mkdocs build The HTML documents will be generated under site directory in a few seconds.","title":"Build html docs"},{"location":"board/96b_ivy5661/","text":"96Boards IVY5661","title":"96Boards IVY5661"},{"location":"board/96b_ivy5661/#96boards-ivy5661","text":"","title":"96Boards IVY5661"},{"location":"build/","text":"UNISOC Zephyr SDK The UNISOC Zephyr SDK is provided for convenience and ease of use. It provides everything you need for development of UNISOC hardware platform except the cross-compilation toolchain, including bootloader and Zephyr portings, top level customized applications and programming tools. Setting up Development Environment Downloading UNISOC Zephyr SDK Building UNISOC Zephyr SDK Updating Firmware Debugging","title":"UNISOC Zephyr SDK"},{"location":"build/#unisoc-zephyr-sdk","text":"The UNISOC Zephyr SDK is provided for convenience and ease of use. It provides everything you need for development of UNISOC hardware platform except the cross-compilation toolchain, including bootloader and Zephyr portings, top level customized applications and programming tools.","title":"UNISOC Zephyr SDK"},{"location":"build/#setting-up-development-environment","text":"","title":"Setting up Development Environment"},{"location":"build/#downloading-unisoc-zephyr-sdk","text":"","title":"Downloading UNISOC Zephyr SDK"},{"location":"build/#building-unisoc-zephyr-sdk","text":"","title":"Building UNISOC Zephyr SDK"},{"location":"build/#updating-firmware","text":"","title":"Updating Firmware"},{"location":"build/#debugging","text":"","title":"Debugging"},{"location":"build/build/","text":"How to Build UNISOC Zephyr SDK Choosing your board The UNISOC Zephyr SDK supports building multiple boards. Choosing your profile The UNISOC Zephyr SDK supports building multiple profiles. All supported profiles are stored in the directory apps , and can be listed by the following command: find apps/ -mindepth 1 -maxdepth 1 -type d ! -name .* -exec basename {} \\; Building To build a specific profile for a specific, use the following the command: BOARD=96b_ivy5661 PROFILE=repeater make Note that the default board is 96b_ivy5661 , while the default profile is repeater . After the compilation, the images can be found in the directory output/repeater/images/ . fdl*.bin - Flash downloader mcuboot-pubkey*.bin - Bootloader zephyr-signed-ota*.bin - Kernel wcn-modem* - WCN Modem","title":"How to Build UNISOC Zephyr SDK"},{"location":"build/build/#how-to-build-unisoc-zephyr-sdk","text":"","title":"How to Build UNISOC Zephyr SDK"},{"location":"build/build/#choosing-your-board","text":"The UNISOC Zephyr SDK supports building multiple boards.","title":"Choosing your board"},{"location":"build/build/#choosing-your-profile","text":"The UNISOC Zephyr SDK supports building multiple profiles. All supported profiles are stored in the directory apps , and can be listed by the following command: find apps/ -mindepth 1 -maxdepth 1 -type d ! -name .* -exec basename {} \\;","title":"Choosing your profile"},{"location":"build/build/#building","text":"To build a specific profile for a specific, use the following the command: BOARD=96b_ivy5661 PROFILE=repeater make Note that the default board is 96b_ivy5661 , while the default profile is repeater . After the compilation, the images can be found in the directory output/repeater/images/ . fdl*.bin - Flash downloader mcuboot-pubkey*.bin - Bootloader zephyr-signed-ota*.bin - Kernel wcn-modem* - WCN Modem","title":"Building"},{"location":"build/debug/","text":"How to Debug At present, debugging with the J-Link and GDB is the only choice. To set the debugging environment, please follow the procedure below: Step 0 : Download J-Link Software Pack and install it. sudo dpkg -i Downloads/JLink_Linux_V630b_x86_64.deb Step 1 : Put Unisoc_UWP566X.JLinkScript to /opt/SEGGER/JLink/Samples/JLink/Scripts. cp Unisoc_UWP566X.JLinkScript /opt/SEGGER/JLink/Samples/JLink/Scripts Step 2 : Start the J-Link GDB server JLinkGDBServer -device Cortex-M4 -endian little -if SWD -speed 8000 -jlinkscriptfile /opt/SEGGER/JLink/Samples/JLink/Scripts/Unisoc_UWP566X.JLinkScript Step 3 : Start the debug session using GDB client","title":"How to Debug"},{"location":"build/debug/#how-to-debug","text":"At present, debugging with the J-Link and GDB is the only choice. To set the debugging environment, please follow the procedure below:","title":"How to Debug"},{"location":"build/debug/#step-0-download-j-link-software-pack-and-install-it","text":"sudo dpkg -i Downloads/JLink_Linux_V630b_x86_64.deb","title":"Step 0: Download J-Link Software Pack and install it."},{"location":"build/debug/#step-1-put-unisoc_uwp566xjlinkscript-to-optseggerjlinksamplesjlinkscripts","text":"cp Unisoc_UWP566X.JLinkScript /opt/SEGGER/JLink/Samples/JLink/Scripts","title":"Step 1: Put Unisoc_UWP566X.JLinkScript to /opt/SEGGER/JLink/Samples/JLink/Scripts."},{"location":"build/debug/#step-2-start-the-j-link-gdb-server","text":"JLinkGDBServer -device Cortex-M4 -endian little -if SWD -speed 8000 -jlinkscriptfile /opt/SEGGER/JLink/Samples/JLink/Scripts/Unisoc_UWP566X.JLinkScript","title":"Step 2: Start the J-Link GDB server"},{"location":"build/debug/#step-3-start-the-debug-session-using-gdb-client","text":"","title":"Step 3: Start the debug session using GDB client"},{"location":"build/download_source/","text":"How to Download UNISOC Zephyr SDK To download the source code, please follow the commands below: mkdir unisoc_zephyr_sdk cd unisoc_zephyr_sdk repo init -u https://github.com/unisoc/manifests.git -b master repo sync repo start --all master","title":"How to Download UNISOC Zephyr SDK"},{"location":"build/download_source/#how-to-download-unisoc-zephyr-sdk","text":"To download the source code, please follow the commands below: mkdir unisoc_zephyr_sdk cd unisoc_zephyr_sdk repo init -u https://github.com/unisoc/manifests.git -b master repo sync repo start --all master","title":"How to Download UNISOC Zephyr SDK"},{"location":"build/setup_env/","text":"How to Set up Development Environment Please refer to Getting Started Guide .","title":"How to Set up Development Environment"},{"location":"build/setup_env/#how-to-set-up-development-environment","text":"Please refer to Getting Started Guide .","title":"How to Set up Development Environment"},{"location":"build/update_firmware/","text":"How to Update Firmware To update firmware, please follow the procedure below: Step 0 : Install the flash programming tool before updating. Download the dloader and install it. sudo dpkg -i dloader_0.x.x-1_amd64.deb In addition, you can build the dloader. make dloader Step 1 : Switch bootstrap pin to ROM Code mode. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2500\u2510 \u250c\u2500\u2510\u250c\u2500\u2510 \u2502 \u2502 \u2502O\u2502 O \u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u251c\u2500\u2524\u250c\u2500\u2510\u251c\u2500\u2524\u251c\u2500\u2524 \u2502 \u2502 \u2502O\u2502\u2502O\u2502\u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u2514\u2500\u2518\u251c\u2500\u2524\u2514\u2500\u2518\u2514\u2500\u2518 \u2502 \u2502 O \u2502O\u2502 O O \u2502 \u2502 \u2514\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Step 2 : Power on the board, and execute the following sequence of commands: cd output/repeater/images ./update_fw.sh Step 3 : Switch bootstrap pin to NOR Flash mode again and push the reset button. \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u2510 \u2502 \u2502 O \u2502O\u2502\u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u250c\u2500\u2510\u251c\u2500\u2524\u251c\u2500\u2524\u251c\u2500\u2524 \u2502 \u2502 \u2502O\u2502\u2502O\u2502\u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u251c\u2500\u2524\u2514\u2500\u2518\u2514\u2500\u2518\u2514\u2500\u2518 \u2502 \u2502 \u2502O\u2502 O O O \u2502 \u2502 \u2514\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 To update one image or several images, please refer to help of update_fw.sh . ./update_fw.sh -h","title":"How to Update Firmware"},{"location":"build/update_firmware/#how-to-update-firmware","text":"To update firmware, please follow the procedure below:","title":"How to Update Firmware"},{"location":"build/update_firmware/#step-0-install-the-flash-programming-tool-before-updating","text":"Download the dloader and install it. sudo dpkg -i dloader_0.x.x-1_amd64.deb In addition, you can build the dloader. make dloader","title":"Step 0: Install the flash programming tool before updating."},{"location":"build/update_firmware/#step-1-switch-bootstrap-pin-to-rom-code-mode","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2500\u2510 \u250c\u2500\u2510\u250c\u2500\u2510 \u2502 \u2502 \u2502O\u2502 O \u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u251c\u2500\u2524\u250c\u2500\u2510\u251c\u2500\u2524\u251c\u2500\u2524 \u2502 \u2502 \u2502O\u2502\u2502O\u2502\u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u2514\u2500\u2518\u251c\u2500\u2524\u2514\u2500\u2518\u2514\u2500\u2518 \u2502 \u2502 O \u2502O\u2502 O O \u2502 \u2502 \u2514\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Step 1: Switch bootstrap pin to ROM Code mode."},{"location":"build/update_firmware/#step-2-power-on-the-board-and-execute-the-following-sequence-of-commands","text":"cd output/repeater/images ./update_fw.sh","title":"Step 2: Power on the board, and execute the following sequence of commands:"},{"location":"build/update_firmware/#step-3-switch-bootstrap-pin-to-nor-flash-mode-again-and-push-the-reset-button","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u2510 \u2502 \u2502 O \u2502O\u2502\u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u250c\u2500\u2510\u251c\u2500\u2524\u251c\u2500\u2524\u251c\u2500\u2524 \u2502 \u2502 \u2502O\u2502\u2502O\u2502\u2502O\u2502\u2502O\u2502 \u2502 \u2502 \u251c\u2500\u2524\u2514\u2500\u2518\u2514\u2500\u2518\u2514\u2500\u2518 \u2502 \u2502 \u2502O\u2502 O O O \u2502 \u2502 \u2514\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 To update one image or several images, please refer to help of update_fw.sh . ./update_fw.sh -h","title":"Step 3: Switch bootstrap pin to NOR Flash mode again and push the reset button."},{"location":"soc/UWP5661/","text":"Overview UWP5661 is a highly integrated 2-in-1 connectivity single chip which offers the lowest RBOM in the industry for smart home, IoT, industrial control and automotive applications. This chip includes 2.4GHz and 5GHz WLAN IEEE802.11 a/b/g/n/ac 2x2 MU-MIMO 20/40/80 MHz VHT R2 MAC/PHY/Radio, Bluetooth 5 with supporting high power mode, mesh, direction finding and long range. Additionally, this radio-on-chip integrates power amplifiers, receive low noise amplifiers and RF TR switch. This chip includes two ARM Cortex-M4 processors. One is used for offloaded Wi-Fi software and Bluetooth controller. The other is used for application processor. UWP5661 also supports interface including SFC, JTAG, I2S, UART and I2C. Features Microcontroller 416MHz ARM\u00ae Cortex\u00ae-M4 for user application customization and development 256MHz ARM\u00ae Cortex\u00ae-M4 and internal SRAM for embedded Wi-Fi and Bluetooth 1 system timer, 1 common timer and 3 general propose timers Hardware DFS from 26MHz to 416MHz Development support: SWD, JTAG Memory 963KB internal SRAM in application processor and 208MHz maximum frequency 32KB I-Cache and 32KB D-Cache in application process 412KB available SRAM for user application Supports to up to 32MB external nor flash and 104MHz maximum frequency 14 DMA channels Wi-Fi features Dual band 2.4/5 GHz 2x2 20/40/80 MHz IEEE 802.11 a/b/g/n/ac Complies with Wi-Fi VHT R2, supports MU-MIMO DL and beamfomee UNISOC Extreme provides QAM-256 in 2.4GHz band to improve 33% throughput UNISOC Green Wi-Fi provides excellent low power consumption features in Wi-Fi normal operation and low power states Support IEEE 802.11mv FTM, Wi-Fi Location and timing measurement Support WMM-PS QoS, Wi-Fi Direct, Miracast R2, Passpoint 2.0, MBO, Wi-Fi Aware R2, etc. Support WEP, WPA/WPA2, WPS 2.0, WAPI, WPI-SM4, EAP-TLS/EAP-TTLS/EAP-PEAP/EAP-SIM/EAP-AKA, IEEE 802.11w Protected Management Frame Complies with IEEE 802.11 d/e/h/i/k/r/u/v/z Supports both single and multiple channel concurrency Support background scan, ARP, IP checksum, IPv6 NS offloading Support spur immunity to avoid performance degradation caused by spur generated by PCB Bluetooth Features Bluetooth specification 5.0, Bluetooth Smart Ready compliant Bluetooth classic and Low Energy dual mode concurrent operation Supports L2 2Mbps, LE advertise Extension, Long Range, AoD direction Finding and Mesh Integrated 10 dBm high efficiency on-chip PA for low energy application Integrated 20 dBm high power on-chip PA for Bluetooth high power mode application Integrated wide-band speech processiong to improve voice quality Supports Low Energy background scan for contex awareness application Supports multiple piconets and up to 16 concurrent Bluetooth Low Energy concurrent links Clock source Supports Standard 26/38.4 MHz crystal and reference clock input Supports internal 32KHz RC Package 204 Balls BGA package (6.9mm x 6.9mm, 0.4 mm pitch) Memory Map module name start end onchip RAM 0x00100000 0x001EF000 flash 0x02000000 0x023FFFFF interrupt contoller 0x40000000 0x40007FFF watchdog 0x40010000 0x40017FFF system timer 0x40018000 0x4001FFFF timer0 0x40020000 0x40027FFF timer1 0x40050000 0x40057FFF iis 0x40030000 0x40037FFF uart0 0x40038000 0x4003FFFF uart1 0x40040000 0x40047FFF wci2 0x40048000 0x4004FFFF common timer 0x40080000 0x40087FFF glb reg 0x40088000 0x4008FFFF dma 0x40120000 0x4012FFFF sdio 0x40140000 0x4014FFFF ahb 0x40130000 0x40137FFF interrupt controller 0x40800000 0x40803FFF gpio0 0x40804000 0x40807FFF gpio1 0x40808000 0x4080BFFF gpio2 0x4080C000 0x4080FFFF aon system timer 0x40824000 0x40827FFF aon timer 0x40828000 0x4082BFFF i2c 0x40834000 0x40837FFF uart2 0x40838000 0x4083BFFF pinmux 0x40840000 0x40843FFF clock 0x40844000 0x40847FFF spinlock 0x40850000 0x40853FFF sfc 0x42000000 0x43FFFFFF sfc cfg 0x40890000 0x4089FFFF Interrupt Number NVIC number name 0 INTC FIQ 1 INTC IRQ 18 wci2 20 INTC AON 21 timer0 22 timer1 23 timer2 26 system timer 35 uart0 36 uart1 37 common timer 40 watchdog INTC FIQ number name 1 soft irq INTC IRQ number name 1 soft irq INTC AON number name 1 soft irq 2 sfc 8 gpio2 9 gpio1 10 gpio0 12 uart2 16 aon system timer 17 i2c","title":"UWP5661"},{"location":"soc/UWP5661/#overview","text":"UWP5661 is a highly integrated 2-in-1 connectivity single chip which offers the lowest RBOM in the industry for smart home, IoT, industrial control and automotive applications. This chip includes 2.4GHz and 5GHz WLAN IEEE802.11 a/b/g/n/ac 2x2 MU-MIMO 20/40/80 MHz VHT R2 MAC/PHY/Radio, Bluetooth 5 with supporting high power mode, mesh, direction finding and long range. Additionally, this radio-on-chip integrates power amplifiers, receive low noise amplifiers and RF TR switch. This chip includes two ARM Cortex-M4 processors. One is used for offloaded Wi-Fi software and Bluetooth controller. The other is used for application processor. UWP5661 also supports interface including SFC, JTAG, I2S, UART and I2C.","title":"Overview"},{"location":"soc/UWP5661/#features","text":"","title":"Features"},{"location":"soc/UWP5661/#microcontroller","text":"416MHz ARM\u00ae Cortex\u00ae-M4 for user application customization and development 256MHz ARM\u00ae Cortex\u00ae-M4 and internal SRAM for embedded Wi-Fi and Bluetooth 1 system timer, 1 common timer and 3 general propose timers Hardware DFS from 26MHz to 416MHz Development support: SWD, JTAG","title":"Microcontroller"},{"location":"soc/UWP5661/#memory","text":"963KB internal SRAM in application processor and 208MHz maximum frequency 32KB I-Cache and 32KB D-Cache in application process 412KB available SRAM for user application Supports to up to 32MB external nor flash and 104MHz maximum frequency 14 DMA channels","title":"Memory"},{"location":"soc/UWP5661/#wi-fi-features","text":"Dual band 2.4/5 GHz 2x2 20/40/80 MHz IEEE 802.11 a/b/g/n/ac Complies with Wi-Fi VHT R2, supports MU-MIMO DL and beamfomee UNISOC Extreme provides QAM-256 in 2.4GHz band to improve 33% throughput UNISOC Green Wi-Fi provides excellent low power consumption features in Wi-Fi normal operation and low power states Support IEEE 802.11mv FTM, Wi-Fi Location and timing measurement Support WMM-PS QoS, Wi-Fi Direct, Miracast R2, Passpoint 2.0, MBO, Wi-Fi Aware R2, etc. Support WEP, WPA/WPA2, WPS 2.0, WAPI, WPI-SM4, EAP-TLS/EAP-TTLS/EAP-PEAP/EAP-SIM/EAP-AKA, IEEE 802.11w Protected Management Frame Complies with IEEE 802.11 d/e/h/i/k/r/u/v/z Supports both single and multiple channel concurrency Support background scan, ARP, IP checksum, IPv6 NS offloading Support spur immunity to avoid performance degradation caused by spur generated by PCB","title":"Wi-Fi features"},{"location":"soc/UWP5661/#bluetooth-features","text":"Bluetooth specification 5.0, Bluetooth Smart Ready compliant Bluetooth classic and Low Energy dual mode concurrent operation Supports L2 2Mbps, LE advertise Extension, Long Range, AoD direction Finding and Mesh Integrated 10 dBm high efficiency on-chip PA for low energy application Integrated 20 dBm high power on-chip PA for Bluetooth high power mode application Integrated wide-band speech processiong to improve voice quality Supports Low Energy background scan for contex awareness application Supports multiple piconets and up to 16 concurrent Bluetooth Low Energy concurrent links","title":"Bluetooth Features"},{"location":"soc/UWP5661/#clock-source","text":"Supports Standard 26/38.4 MHz crystal and reference clock input Supports internal 32KHz RC","title":"Clock source"},{"location":"soc/UWP5661/#package","text":"204 Balls BGA package (6.9mm x 6.9mm, 0.4 mm pitch)","title":"Package"},{"location":"soc/UWP5661/#memory-map","text":"module name start end onchip RAM 0x00100000 0x001EF000 flash 0x02000000 0x023FFFFF interrupt contoller 0x40000000 0x40007FFF watchdog 0x40010000 0x40017FFF system timer 0x40018000 0x4001FFFF timer0 0x40020000 0x40027FFF timer1 0x40050000 0x40057FFF iis 0x40030000 0x40037FFF uart0 0x40038000 0x4003FFFF uart1 0x40040000 0x40047FFF wci2 0x40048000 0x4004FFFF common timer 0x40080000 0x40087FFF glb reg 0x40088000 0x4008FFFF dma 0x40120000 0x4012FFFF sdio 0x40140000 0x4014FFFF ahb 0x40130000 0x40137FFF interrupt controller 0x40800000 0x40803FFF gpio0 0x40804000 0x40807FFF gpio1 0x40808000 0x4080BFFF gpio2 0x4080C000 0x4080FFFF aon system timer 0x40824000 0x40827FFF aon timer 0x40828000 0x4082BFFF i2c 0x40834000 0x40837FFF uart2 0x40838000 0x4083BFFF pinmux 0x40840000 0x40843FFF clock 0x40844000 0x40847FFF spinlock 0x40850000 0x40853FFF sfc 0x42000000 0x43FFFFFF sfc cfg 0x40890000 0x4089FFFF","title":"Memory Map"},{"location":"soc/UWP5661/#interrupt-number","text":"","title":"Interrupt Number"},{"location":"soc/UWP5661/#nvic","text":"number name 0 INTC FIQ 1 INTC IRQ 18 wci2 20 INTC AON 21 timer0 22 timer1 23 timer2 26 system timer 35 uart0 36 uart1 37 common timer 40 watchdog","title":"NVIC"},{"location":"soc/UWP5661/#intc-fiq","text":"number name 1 soft irq","title":"INTC FIQ"},{"location":"soc/UWP5661/#intc-irq","text":"number name 1 soft irq","title":"INTC IRQ"},{"location":"soc/UWP5661/#intc-aon","text":"number name 1 soft irq 2 sfc 8 gpio2 9 gpio1 10 gpio0 12 uart2 16 aon system timer 17 i2c","title":"INTC AON"},{"location":"tools/dloader/","text":"Dloader WHAT IS THIS? dloader is firmware downloading tool for Unisoc MCU modules. SOURCE CODE git clone https://github.com/unisoc/dloader.git INSTALLATION ./configure make sudo make install See the file INSTALL for compilation and installation instructions. USAGE Please run dloader for a list and explanation of options.","title":"Dloader"},{"location":"tools/dloader/#dloader","text":"","title":"Dloader"},{"location":"tools/dloader/#what-is-this","text":"dloader is firmware downloading tool for Unisoc MCU modules.","title":"WHAT IS THIS?"},{"location":"tools/dloader/#source-code","text":"git clone https://github.com/unisoc/dloader.git","title":"SOURCE CODE"},{"location":"tools/dloader/#installation","text":"./configure make sudo make install See the file INSTALL for compilation and installation instructions.","title":"INSTALLATION"},{"location":"tools/dloader/#usage","text":"Please run dloader for a list and explanation of options.","title":"USAGE"}]}